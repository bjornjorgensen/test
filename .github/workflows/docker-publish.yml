name: ci

on:
  # Triggers the workflow every day
  #schedule:
    #- cron: "0 8 * * *" 
    
  push:
    branches:
      - 'main'
env:
  org_secret: ${{ secrets.org }}
  projectKey_secret: ${{ secrets.projectKey }}
  SONARQUBE_URL: ${{ secrets.SONARQUBE_URL}}
  
jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        uses: actions/checkout@v3
        name: Set up JDK 17
      -
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'   
      -
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build
      - name: Clone 
        uses: actions/checkout@master
        with:
          repository: apache/spark
      - name: download SonarCloud
        run: |
          export SONAR_SCANNER_VERSION=4.7.0.2747
          export SONAR_SCANNER_HOME=$HOME/.sonar/sonar-scanner-$SONAR_SCANNER_VERSION-linux
          curl --create-dirs -sSLo $HOME/.sonar/sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-$SONAR_SCANNER_VERSION-linux.zip
          unzip -o $HOME/.sonar/sonar-scanner.zip -d $HOME/.sonar/
          export PATH=$SONAR_SCANNER_HOME/bin:$PATH
          export SONAR_SCANNER_OPTS="-server"  
      - 
        name: Build with Maven
        run: |
            ls
            pwd
            cd spark
            ./build/mvn -DskipTests clean verify sonar:sonar \
            -Dsonar.projectKey=${{ secrets.projectKey }} \
            -Dsonar.host.url=${{ secrets.SONARQUBE_URL }} \
            -Dsonar.organization=${{ secrets.org }}
        # name: copy spark
        # run:
      -
        name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - 
        name: set env
        run: echo "NOW=$(date +'%d%m%Y')" >> $GITHUB_ENV 
      -
        name: Build and push
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: bjornjorgensen/jupyter-spark-master-docker:${{ env.NOW }} , bjornjorgensen/jupyter-spark-master-docker:latest
